// @cucumber/screenplay doesn't support ESM yet. When it does, we can eliminate this

import type { IWorldOptions } from '@cucumber/cucumber';
import { World } from '@cucumber/cucumber';
import { Actor } from '@cucumber/screenplay';
// import ActorLookup from '@cucumber/screenplay/src/ActorLookup';
// import assignTasks from '@cucumber/screenplay'

// export class ActorLookup {
//   private readonly actorByName = new Map<string, Actor>()

//   public findOrCreateActor(world: unknown, actorName: string): Actor {
//     let actor = this.actorByName.get(actorName)

//     if (actor === undefined) {
//       actor = new Actor(world, actorName)
//       this.actorByName.set(actorName, actor)
//     }

//     return actor
//   }

//   public get actors(): IterableIterator<Actor> {
//     return this.actorByName.values()
//   }
// }

export class ActorWorld extends World {
  private readonly actorByName = new Map<string, Actor>();

  constructor(props: IWorldOptions) {
    super(props);
    // if (this.parameters.tasks) {
    //   assignTasks(this, this.parameters.tasks)
    // }
  }

  // public findOrCreateActor(actorName: string): Actor {
  //   return this.actorLookup.findOrCreateActor(this, actorName);
  // }
}
